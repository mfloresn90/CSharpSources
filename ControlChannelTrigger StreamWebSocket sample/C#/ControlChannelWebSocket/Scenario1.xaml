<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
//
//*********************************************************
-->
<common:LayoutAwarePage
    x:Class="ControlChannelWebSocket.Scenario1"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:ControlChannelWebSocket"
    xmlns:common="using:SDKTemplate.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Grid x:Name="LayoutRoot" Background="White" HorizontalAlignment="Left" VerticalAlignment="Top">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid x:Name="Input" Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <StackPanel Margin="0">
                <TextBlock TextWrapping="Wrap" Style="{StaticResource BasicTextStyle}" Text="This scenario demonstrates how to use the ControlChannelTrigger object with the StreamWebSocket transport. This app demonstrates a StreamWebSocket client. A IIS based echo server is provided with this sample. The client and server must be deployed on separate machines. Start the server to listen and then have the client connect to the server. The client can send HttpRequest over the websocket to the server. Note that the server by default responds by completing the HttpRequest after a delay of 25 seconds. This delay is to ensure the client app can have enough time to enter suspended state and then receive the incoming HttpResponse from the server."/>
                <StackPanel Orientation="Horizontal" Margin="0,10,0,0"/>
                <StackPanel HorizontalAlignment="Left" Height="148" Width="800">
                    <StackPanel HorizontalAlignment="Left" Height="70" Width="390" Orientation="Horizontal">
                        <RadioButton x:Name="ClientRoleButton" Content="Client" Height="30" Width="180" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="10,0" Click="ClientRole_Click" BorderBrush="Gray" BorderThickness="2"/>
                    </StackPanel>
                    <Grid x:Name="ClientSettings" Visibility="Collapsed">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock  Grid.Row="0" Grid.Column="0" Text="ServerUri: "  TextWrapping="Wrap" VerticalAlignment="Center" Style="{StaticResource BasicTextStyle}" />
                        <TextBox Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2" x:Name="ServerUri" Text="ws://server-hostname/WebSocketSample/echowebsocket.ashx" HorizontalAlignment="Left" VerticalAlignment="Center" />
                        <Button Grid.Row="0"  Grid.Column="3"  x:Name="ConnectButton" 
                          Content="Connect" Click="ConnectButton_Click">
                        </Button>
                        <TextBox Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3"  x:Name="MessageBox" 
                         Text="This is a message to the server" VerticalAlignment="Center"
                         TextWrapping="Wrap"
                         Height="25"
                         >
                        </TextBox>
                        <Button Grid.Row="1" Grid.Column="3" x:Name="SendButton" 
                          Content="Send" Click="SendButton_Click">
                        </Button>
                    </Grid>
                </StackPanel>
            </StackPanel>
            <!-- Add Storyboards to the visual states below as necessary for supporting the various layouts for the input section -->
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup>
                    <VisualState x:Name="InputDefaultLayout"/>
                    <VisualState x:Name="InputBelow768Layout"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>

        <Grid x:Name="Output" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="1">
            <ScrollViewer
          HorizontalScrollBarVisibility="Disabled"
          VerticalScrollBarVisibility="Auto"
          HorizontalScrollMode="Disabled"
          VerticalScrollMode="Enabled"
          ZoomMode="Disabled"
          Margin="10,4,10,0" >
                <TextBlock x:Name="DebugTextBlock" 
                       TextWrapping="Wrap"
                       Style="{StaticResource BasicTextStyle}"
                       IsTextSelectionEnabled="True" />
            </ScrollViewer>
            <!-- Add Storyboards to the visual states below as necessary for supporting the various layouts for the output section -->
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup>
                    <VisualState x:Name="OutputDefaultLayout"/>
                    <VisualState x:Name="OutputBelow768Layout"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
     </Grid>
</common:LayoutAwarePage>

<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
//
//*********************************************************
-->
<Page
    x:Class="ApplicationViews.S2_Edges"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:ApplicationViews"
    xmlns:common="using:SDKTemplate.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Grid x:Name="LayoutRoot" Background="White">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid x:Name="Input" Grid.Row="0">
            <StackPanel Orientation="Vertical" Grid.Row="0">
                <TextBlock TextWrapping="Wrap" Style="{StaticResource BasicTextStyle}" Margin="0,0,0,20" HorizontalAlignment="Left" >
                    Developers can query properties of its window to make layout decisions. This scenario demonstrates how the developer can use whether or not the app is adjacent to the left edge, right edge, neither edge, or both edges (full screen) to update the position of controls in the app.
                </TextBlock>

                <TextBlock TextWrapping="Wrap" Style="{StaticResource BasicTextStyle}" Margin="0,0,0,20" HorizontalAlignment="Left" >
                    Resize and position this window to see the control reposition itself when the window is adjacent to the left edge, right edge, neither edge, or both edges (full screen).
                </TextBlock>
            </StackPanel>
        </Grid>

        <Grid x:Name="Output" VerticalAlignment="Top" Grid.Row="1">
            <Button x:Name="myControl" Content="My Control"/>
        </Grid>
    </Grid>
</Page>

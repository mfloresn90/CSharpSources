<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
//
//*********************************************************
-->
<common:LayoutAwarePage
    x:Class="FirmwareUpdateUsbDevice.FirmwareUpdate"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:FirmwareUpdateUsbDevice"
    xmlns:common="using:SDKTemplate.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Grid x:Name="LayoutRoot" Background="White" HorizontalAlignment="Left" VerticalAlignment="Top">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid x:Name="Input" Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <StackPanel Orientation="Vertical" Grid.Row="0" Margin="0,10,0,0">
                <TextBlock x:Name="InputTextBlock1"  TextWrapping="Wrap" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left" >
                    This scenario demonstrates how to update a device's firmware. The firmware is built into the app so there is no external file containing the firmware.
                    <LineBreak />
                    <Bold>Warning:</Bold> Canceling the firmware update will render the device unusable until a new firmware is flashed to the device using MuttUtil.
                </TextBlock>
                
                <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
                    <TextBlock x:Name="DeviceVersionBefore" TextWrapping="Wrap" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left" >
                        Firmware version before firmware update:
                    </TextBlock>
                    <TextBlock x:Name="OutputDeviceVersionBefore" Margin="10,0,0,0" TextWrapping="Wrap" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left" ></TextBlock>
                </StackPanel>

                <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
                    <TextBlock x:Name="DeviceVersionAfter" TextWrapping="Wrap" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left" >
                        Firmware version after firmware update:
                    </TextBlock>
                    <TextBlock x:Name="OutputDeviceVersionAfter" Margin="10,0,0,0" TextWrapping="Wrap" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left" ></TextBlock>
                </StackPanel>

                <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
                    <Button x:Name="ButtonUpdateFirmwareOnFirstEnumeratedDevice"  Content="Perform a firmware update on the first available device" Margin="0,0,10,0" Click="UpdateFirmwareOnFirstEnumeratedDevice_Click"/>
                    <Button x:Name="ButtonCancelFirmwareUpdate"  Content="Cancel firmware update" Margin="0,0,10,0" Click="CancelFirmwareUpdate_Click"/>
                </StackPanel>
                <StackPanel Orientation="Vertical" Margin="0,30,0,0">
                    <TextBlock x:Name="ProgressBarText" TextWrapping="Wrap" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left" >
                        Firmware update progress:
                    </TextBlock>
                    <ProgressBar x:Name="FirmwareUpdateProgressBar" Width="500" Height="10" Margin="2,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Maximum="100"/>
                </StackPanel>
            </StackPanel>

            <!-- Add Storyboards to the visual states below as necessary for supporting the various layouts for the input section -->
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup>
                    <VisualState x:Name="InputFullScreenLandscape"/>
                    <VisualState x:Name="InputFilled"/>
                    <VisualState x:Name="InputFullScreenPortrait"/>
                    <VisualState x:Name="InputSnapped"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>

        <Grid x:Name="Output" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="1">
            <!-- Add Storyboards to the visual states below as necessary for supporting the various layouts for the output section -->
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup>
                    <VisualState x:Name="OutputFullScreenLandscape"/>
                    <VisualState x:Name="OutputFilled"/>
                    <VisualState x:Name="OutputFullScreenPortrait"/>
                    <VisualState x:Name="OutputSnapped"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
     </Grid>
</common:LayoutAwarePage>

<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->
<common:LayoutAwarePage
    x:Class="Animation.Scenario3"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Animation"
    xmlns:common="using:SDKTemplate.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Grid x:Name="LayoutRoot" Background="White">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid x:Name="Input" Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <TextBlock x:Name="InputTextBlock1" Grid.Row="0" TextWrapping="Wrap" 
                       Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left">
                You can apply a variety of easing functions to animations to control how intermediate values are 
                calculated and create realistic motion effects. The demonstration below shows the effect of some 
                easing functions, including a graph of the selected function. Change one of the options below to 
                see the effect of a particular function and mode.
            </TextBlock>
            <StackPanel Orientation="Horizontal" Margin="0,10,0,0" Grid.Row="1">
                <StackPanel x:Name="InputPanel" Orientation="Horizontal">
                    <StackPanel x:Name="FunctionPanel" Orientation="Horizontal">
                        <TextBlock Style="{StaticResource BasicTextStyle}" Text="Easing function:" VerticalAlignment="Top" Margin="0,0,10,0" />
                        <ComboBox x:Name="Scenario3FunctionSelector" Margin="0,0,10,0">
                            <ComboBoxItem>BounceEase</ComboBoxItem>
                            <ComboBoxItem>CircleEase</ComboBoxItem>
                            <ComboBoxItem>ExponentialEase</ComboBoxItem>
                            <ComboBoxItem>PowerEase</ComboBoxItem>
                        </ComboBox>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Style="{StaticResource BasicTextStyle}" Text="Easing mode:" VerticalAlignment="Top" Margin="0,0,10,0" />
                        <ComboBox x:Name="Scenario3EasingModeSelector">
                            <ComboBoxItem>EaseIn</ComboBoxItem>
                            <ComboBoxItem>EaseOut</ComboBoxItem>
                            <ComboBoxItem>EaseInOut</ComboBoxItem>
                        </ComboBox>
                    </StackPanel>
                </StackPanel>
            </StackPanel>
        </Grid>

        <Grid x:Name="Output" Grid.Row="1">
            <StackPanel x:Name="ContentPanel" Orientation="Horizontal" VerticalAlignment="Top" HorizontalAlignment="Left">
                <StackPanel.Resources>
                    <Storyboard x:Name="Scenario3Storyboard">
                        <!-- this animation will animate the value of the Canvas.Left property of the rectangle Scenario3MovingRectangle to 240 -->
                        <DoubleAnimation x:Name="RectanglePositionAnimation"
                            Storyboard.TargetName="Scenario3MovingRectangle"
                            Storyboard.TargetProperty="(Canvas.Left)"
                            Duration="0:0:3"
                            RepeatBehavior="Forever"
                            From="0"
                            To="300" />

                        <!-- this animation will animate the value of the Canvas.Left property of the ellipse GraphMarker to 50 -->
                        <DoubleAnimation x:Name="GraphPositionMarkerXAnimation"
                            Storyboard.TargetName="GraphMarker"
                            Storyboard.TargetProperty="(Canvas.Left)"
                            Duration="0:0:3"
                            RepeatBehavior="Forever"
                            From="0"
                            To="100" />

                        <!-- this animation will animate the value of the Canvas.Top property of the ellipse GraphMarker to 50 -->
                        <DoubleAnimation x:Name="GraphPositionMarkerYAnimation"
                            Storyboard.TargetName="GraphMarker"
                            Storyboard.TargetProperty="(Canvas.Top)"
                            Duration="0:0:3"
                            RepeatBehavior="Forever"
                            From="0"
                            To="100" />
                    </Storyboard>
                </StackPanel.Resources>
                <StackPanel>
                    <TextBlock Style="{StaticResource BasicTextStyle}" Text="Function graph:" VerticalAlignment="Center" />
                    <Canvas Name="GraphContainer" RenderTransformOrigin="0,0.5" Height="100" Width="100">
                        <Canvas.RenderTransform>
                            <ScaleTransform ScaleY="-1" />
                        </Canvas.RenderTransform>
                        <Canvas Name="Graph" />
                        <Line X1="0" Y1="0" X2="0" Y2="100" Stroke="{StaticResource ApplicationForegroundThemeBrush}" StrokeThickness="1" Width="1" Height="100" />
                        <Line X1="0" Y1="0" X2="100" Y2="1" Stroke="{StaticResource ApplicationForegroundThemeBrush}" StrokeThickness="1" Width="100" Height="1" />

                        <Ellipse Name="GraphMarker" Fill="Orange" Width="5" Height="5" />
                    </Canvas>
                </StackPanel>
                <StackPanel Margin="30,0,0,0">
                    <TextBlock Style="{StaticResource BasicTextStyle}" Text="Animation result:" VerticalAlignment="Center" />
                    <Border BorderBrush="Black" BorderThickness="1">
                        <Canvas Width="400" Height="100">
                            <Rectangle Name="Scenario3MovingRectangle" Width="100" Height="100" Fill="Blue" />
                        </Canvas>
                    </Border>
                </StackPanel>

            </StackPanel>
        </Grid>

        <!-- Add Storyboards to the visual states below as necessary for supporting the various layouts -->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="DefaultLayout"/>
                <VisualState x:Name="Below768Layout"/>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</common:LayoutAwarePage>

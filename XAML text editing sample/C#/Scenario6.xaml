<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->
<common:LayoutAwarePage
    x:Class="TextEditing.Scenario6"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:TextEditing"
    xmlns:common="using:SDKTemplate.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Grid x:Name="LayoutRoot" Background="White" HorizontalAlignment="Left" VerticalAlignment="Top">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid x:Name="Input" Grid.Row="0" Height="350">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="400"/>
                <ColumnDefinition Width="400"/>
            </Grid.ColumnDefinitions>
            <RichTextBlock TextWrapping="Wrap" OverflowContentTarget="{Binding ElementName=ltcOne}" FontFamily="Segoe UI" FontSize="16" Foreground="{StaticResource ApplicationForegroundThemeBrush}">
                <Paragraph>The WinRT Text Object Model (TOM) is a powerful set of APIs exposed by the Document property on RichEditBox. This API set provides direct access to the content contained in the control at various levels of granularity. You should be right at home if you've ever used the RichEdit TOM.</Paragraph>

                <Paragraph FontWeight="Bold">Document (ITextDocument)</Paragraph>
                <Paragraph>- Content serialization</Paragraph>
                <Paragraph>- Access to selection</Paragraph>
                <Paragraph>- Undo/Redo functionality</Paragraph>
                <Paragraph>- Default content formatting</Paragraph>

                <Paragraph FontWeight="Bold">Range (ITextRange)</Paragraph>
                <Paragraph>- Content modification</Paragraph>
                <Paragraph>- Content navigation including search</Paragraph>

                <Paragraph FontWeight="Bold">Selection (ITextSelection)</Paragraph>
                <Paragraph>- Selection modification</Paragraph>

                <Paragraph FontWeight="Bold">Paragraph properties (ITextParagraphFormat)</Paragraph>
                <Paragraph>- Lists</Paragraph>
                <Paragraph>- Alignment</Paragraph>
                <Paragraph>- Indentation</Paragraph>
                <Paragraph>- Line spacing</Paragraph>

                <Paragraph FontWeight="Bold">Character properties (ITextCharacterFormat)</Paragraph>
                <Paragraph>- Foreground/Background</Paragraph>
                <Paragraph>- Weight, Style, Stretch</Paragraph>
                <Paragraph>- Hyperlink</Paragraph>
                <Paragraph>- Other formatting (such as kerning, strikethrough, and underline)</Paragraph>
            </RichTextBlock>
            <RichTextBlockOverflow x:Name="ltcOne" Grid.Column="1" Margin="20, 0, 0, 0"/>
        </Grid>

        <Grid x:Name="Output" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="50"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <RichEditBox x:Name="editor" ScrollViewer.VerticalScrollBarVisibility="Visible" Grid.Row="1" Height="300" Width="500" VerticalAlignment="Top" />
            <StackPanel Orientation="Horizontal">
                <Button Click="BoldButtonClick" IsTabStop="False" Margin="0, 0, 20, 0">Bold</Button>
                <Button Click="ItalicButtonClick" IsTabStop="False" Margin="0, 0, 20, 0">Italic</Button>
                <TextBlock Style="{StaticResource BasicTextStyle}"  Text="Find:" VerticalAlignment="Center"/>
                <TextBox x:Name="findBox" Width="200" Height="20" TextChanged="FindBoxTextChanged" GotFocus="FindBoxGotFocus" LostFocus="FindBoxLostFocus" Margin="0, 0, 20, 0"/>
                <Grid x:Name="fontColorGrid">
                    <Button x:Name="fontColorButton"  Click="FontColorButtonClick" IsTabStop="False" LostFocus="FontColorButtonLostFocus">Font Color</Button>
                    <Popup x:Name="fontColorPopup" IsOpen="False">
                        <Border BorderBrush="Gray" BorderThickness="2" Background="White">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Button x:Name="black" Click="ColorButtonClick">
                                    <Button.Content>
                                        <Rectangle Fill="Black" Width="50" Height="25"/>
                                    </Button.Content>
                                </Button>
                                <Button x:Name="gray" Click="ColorButtonClick" Grid.Row="1">
                                    <Button.Content>
                                        <Rectangle Fill="Gray" Width="50" Height="25"/>
                                    </Button.Content>
                                </Button>
                                <Button x:Name="darkgreen" Click="ColorButtonClick" Grid.Column="1">
                                    <Button.Content>
                                        <Rectangle Fill="DarkGreen" Width="50" Height="25"/>
                                    </Button.Content>
                                </Button>
                                <Button x:Name="green" Click="ColorButtonClick" Grid.Row="1" Grid.Column="1">
                                    <Button.Content>
                                        <Rectangle Fill="Green" Width="50" Height="25"/>
                                    </Button.Content>
                                </Button>
                                <Button x:Name="blue" Click="ColorButtonClick" Grid.Column="2">
                                    <Button.Content>
                                        <Rectangle Fill="Blue" Width="50" Height="25"/>
                                    </Button.Content>
                                </Button>
                                <Button Click="ColorButtonClick" Grid.Row="2" Grid.Column="2">Close</Button>
                            </Grid>
                        </Border>
                    </Popup>
                </Grid>
            </StackPanel>
        </Grid>
        
        <!-- Add Storyboards to the visual states below as necessary for supporting the various layouts -->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="DefaultLayout"/>
                <VisualState x:Name="Below768Layout"/>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</common:LayoutAwarePage>

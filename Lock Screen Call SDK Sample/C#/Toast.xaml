<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
//
//*********************************************************
-->
<common:LayoutAwarePage
    x:Class="LockScreenCall.ToastScenario"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:LockScreenCall"
    xmlns:common="using:SDKTemplate.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Grid x:Name="LayoutRoot" Background="White" HorizontalAlignment="Left" VerticalAlignment="Top">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid x:Name="Input" Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <TextBlock x:Name="InputTextBlock1"  TextWrapping="Wrap" Grid.Row="0" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left" >
                This scenario raises a toast with secondary actions.
                <LineBreak/>
                <LineBreak/>
                You can ask for a delay to give you time to switch to the lock screen.
                <LineBreak/>
                <LineBreak/>
                Accepting the toast switches to a page that simulates a call.
            </TextBlock>

            <Grid Grid.Row="1" Margin="0,10,0,10">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Button Grid.Column="0" Grid.Row="0" x:Name="VideoOnly" Content="Video" Click="Toast_Click"/>
                <TextBlock Grid.Column="1" Grid.Row="0" Text="A toast with Video and Decline buttons." Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left" />
                <Button Grid.Column="0" Grid.Row="1" x:Name="VoiceOnly" Content="Voice" Click="Toast_Click"/>
                <TextBlock Grid.Column="1" Grid.Row="1" Text="A toast with Voice and Decline buttons." Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left" />
                <Button Grid.Column="0" Grid.Row="2" x:Name="VideoAndVoice" Content="Video+Voice" Click="Toast_Click"/>
                <TextBlock Grid.Column="1" Grid.Row="2" Text="A toast with Video, Voice, and Decline buttons." Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left" />
             </Grid>

            <Grid Grid.Row="2">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0" Grid.Row="0" Text="Toast delay:" Style="{StaticResource BasicTextStyle}" Margin="0,10,10,10" VerticalAlignment="Top"/>
                <ComboBox Grid.Column="1" Grid.Row="0" x:Name="ToastDelay" SelectedIndex="1" VerticalAlignment="Top" HorizontalAlignment="Left">
                    <ComboBoxItem x:Name="d0">None</ComboBoxItem>
                    <ComboBoxItem x:Name="d5">5 seconds</ComboBoxItem>
                    <ComboBoxItem x:Name="d10">10 seconds</ComboBoxItem>
                </ComboBox>
                <TextBlock Grid.Column="0" Grid.Row="1" Text="Receive call from" Style="{StaticResource BasicTextStyle}" Margin="0,10,10,10" VerticalAlignment="Top"/>
                <ComboBox Grid.Column="1" Grid.Row="1" x:Name="CallerType" SelectedIndex="0" VerticalAlignment="Top" HorizontalAlignment="Left">
                    <ComboBoxItem x:Name="Dad">Dad</ComboBoxItem>
                    <ComboBoxItem x:Name="Mom">Mom</ComboBoxItem>
                    <ComboBoxItem x:Name="Grandpa">Grandpa</ComboBoxItem>
                    <ComboBoxItem x:Name="Grandma">Grandma</ComboBoxItem>
                </ComboBox>
                <TextBlock Grid.Column="0" Grid.Row="2" Text="Caller hangs up" Style="{StaticResource BasicTextStyle}" Margin="0,10,10,10" VerticalAlignment="Top"/>
                <ComboBox Grid.Column="1" Grid.Row="2" x:Name="CallDuration" SelectedIndex="0" VerticalAlignment="Top" HorizontalAlignment="Left">
                    <ComboBoxItem x:Name="s0">Never</ComboBoxItem>
                    <ComboBoxItem x:Name="s5">After 5 seconds</ComboBoxItem>
                    <ComboBoxItem x:Name="s10">After 10 seconds</ComboBoxItem>
                </ComboBox>
            </Grid>
            
            <!-- Add Storyboards to the visual states below as necessary for supporting the various layouts for the input section -->
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup>
                    <VisualState x:Name="InputFullScreenLandscape"/>
                    <VisualState x:Name="InputFilled"/>
                    <VisualState x:Name="InputFullScreenPortrait"/>
                    <VisualState x:Name="InputSnapped"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>

        <Grid x:Name="Output" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="1">
        
            <!-- Add Storyboards to the visual states below as necessary for supporting the various layouts for the output section -->
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup>
                    <VisualState x:Name="OutputFullScreenLandscape"/>
                    <VisualState x:Name="OutputFilled"/>
                    <VisualState x:Name="OutputFullScreenPortrait"/>
                    <VisualState x:Name="OutputSnapped"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
     </Grid>
</common:LayoutAwarePage>

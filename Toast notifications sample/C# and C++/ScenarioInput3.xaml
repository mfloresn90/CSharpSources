<!-- THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF   -->
<!-- ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO -->
<!-- THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A      -->
<!-- PARTICULAR PURPOSE.                                                 -->
<!--                                                                     -->
<!-- Copyright (c) Microsoft Corporation. All rights reserved            -->

<Page
	x:Class="ToastsSampleCPP.ScenarioInput3"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	mc:Ignorable="d"
	d:DesignWidth="1366"
	d:DesignHeight="768">

    <StackPanel>
        <TextBlock Style="{StaticResource DescriptionTextStyle}" TextWrapping="Wrap">
            In this scenario, the app will show a toast notification which includes images which are hosted on a web service.
            <LineBreak/>
            <LineBreak/>
            Toasts can also use images downloaded from the internet. The application must have the Internet Capability 
            specified in its manifest to do so.
        </TextBlock>
        <TextBlock Style="{StaticResource H4Style}" TextWrapping="Wrap">
            Specify the URL of an image...
        </TextBlock>
        <TextBox x:Name="Scenario3ImageUrl" Margin="0,10,0,0" Text="http://" />
        <TextBlock Style="{StaticResource H4Style}" TextWrapping="Wrap">
            ...and press one of the buttons below to see an example of that toast:
        </TextBlock>

        <StackPanel>
            <StackPanel Margin="0,20,0,0">
                <TextBlock Style="{StaticResource DescriptionTextStyle}" TextWrapping="Wrap" Text="A large image and a single string wrapped across three lines of text:" />
                <Button x:Name="Scenario3DisplayToastImage01" Content="ToastImageAndText01"/>
            </StackPanel>
            <StackPanel Margin="0,15,0,0">
                <TextBlock Style="{StaticResource DescriptionTextStyle}" TextWrapping="Wrap" Text="A large image, one string of bold text, and one string of regular text wrapped across two lines:" />
                <Button x:Name="Scenario3DisplayToastImage02" Content="ToastImageAndText02"/>
            </StackPanel>
            <StackPanel Margin="0,15,0,0">
                <TextBlock Style="{StaticResource DescriptionTextStyle}" TextWrapping="Wrap" Text="A large image, one string of bold text wrapped across two lines, and a string of regular text on the third line:" />
                <Button x:Name="Scenario3DisplayToastImage03" Content="ToastImageAndText03"/>
            </StackPanel>
            <StackPanel Margin="0,15,0,0">
                <TextBlock Style="{StaticResource DescriptionTextStyle}" TextWrapping="Wrap" Text="A large image, one string of bold text on the first line, and two strings of regular text on the second and third lines:" />
                <Button x:Name="Scenario3DisplayToastImage04" Content="ToastImageAndText04"/>
            </StackPanel>
        </StackPanel>

        <StackPanel Margin="0,20,0,0">
            <TextBlock Style="{StaticResource DescriptionTextStyle}" TextWrapping="Wrap" Text="Since notifications are just XML, you can create them in many different ways. Above, the NotificationsExtensions library is used. You can also create notifications with strings."/>
            <Button x:Name="Scenario3DisplayToastImage01String" Content="ToastImageAndText01"/>
            <Button x:Name="Scenario3DisplayToastImage02String" Content="ToastImageAndText02"/>
            <Button x:Name="Scenario3DisplayToastImage03String" Content="ToastImageAndText03"/>
            <Button x:Name="Scenario3DisplayToastImage04String" Content="ToastImageAndText04"/>
        </StackPanel>
    </StackPanel>
</Page>
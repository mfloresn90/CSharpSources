<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
//
//*********************************************************
-->
<Page
    x:Class="CustomDeviceAccess.DeviceIO"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:CustomDeviceAccess"
    xmlns:common="using:SDKTemplate.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Grid x:Name="LayoutRoot" Background="White">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid x:Name="Input" Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <TextBlock x:Name="InputTextBlock1" Grid.Row="0" TextWrapping="Wrap" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left">
            	<Run Text="This scenario shows how to use I/O controls to perform simple operations with a device driver."/>
            	<LineBreak/>
            	<Run/>
            	<LineBreak/>
            	<Run Text="The buttons below use the SendIOControlAsync method to communicate with the device driver, and set or get the value of the seven-segment display on the device."/>
            	<LineBreak/>
            	<Run/>
            	<LineBreak/>
            	<Run Text="The IO control codes used in this scenario, along with all other driver-defined constants, in the Fx2Driver class (Fx2Driver.cs)."/>
            </TextBlock>

            <StackPanel Orientation="Vertical" Margin="0,10,0,0" Grid.Row="1">
                <Button x:Name="DeviceIOGet" Content="Get Seven Segment Display" Margin="0,0,10,0" Click="DeviceIOGet_Click_1"/>
                <StackPanel Orientation="Horizontal">
                    <Button x:Name="DeviceIOSet" Content="Set Seven Segment Display" Margin="0,0,10,0" Click="DeviceIOSet_Click_1"/>
                    <ComboBox x:Name="DeviceIOSegmentInput" SelectedIndex="7">
                        <ComboBoxItem Content="1"></ComboBoxItem>
                        <ComboBoxItem Content="2"></ComboBoxItem>
                        <ComboBoxItem Content="3"></ComboBoxItem>
                        <ComboBoxItem Content="4"></ComboBoxItem>
                        <ComboBoxItem Content="5"></ComboBoxItem>
                        <ComboBoxItem Content="6"></ComboBoxItem>
                        <ComboBoxItem Content="7"></ComboBoxItem>
                        <ComboBoxItem Content="8"></ComboBoxItem>
                    </ComboBox>
                </StackPanel>
            </StackPanel>

            <!-- Add Storyboards to the visual states below as necessary for supporting the various layouts for the input section -->
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup>
                    <VisualState x:Name="InputDefaultLayout"/>
                    <VisualState x:Name="InputBelow768Layout"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>

        <Grid x:Name="Output" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="1">

            <!-- Add Storyboards to the visual states below as necessary for supporting the various layouts for the input section -->
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup>
                    <VisualState x:Name="OutputDefaultLayout"/>
                    <VisualState x:Name="OutputBelow768Layout"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </Grid>
</Page>

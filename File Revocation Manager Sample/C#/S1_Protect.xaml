<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
//
//*********************************************************
-->
<common:LayoutAwarePage
    x:Class="FileRevocation.S1_Protect"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:FileRevocation"
    xmlns:common="using:SDKTemplate.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Grid x:Name="LayoutRoot" Background="White" HorizontalAlignment="Left" VerticalAlignment="Top">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        
        <Grid x:Name="Input" Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <StackPanel Orientation="Vertical" >
                <TextBlock x:Name="InputTextBlock1"  TextWrapping="Wrap" Grid.Row="0" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left" >
                    <LineBreak/>
                    Clicking the "Setup" button will help you pick a base folder and will create the files "RevokeSample.txt" and "RevokeTarget.txt" in it. It will also create the folders "RevokeSample" and "RevokeTarget" at the same location.
                    <LineBreak/><LineBreak/>
                    Clicking the "Protect file" button will protect the "RevokeSample.txt" file using the provided Enterprise ID.
                    <LineBreak/><LineBreak/>
                    Clicking the "Protect folder" button will protect the "RevokeSample" folder using the provided Enterprise ID.
                    <LineBreak/><LineBreak/>                      
                    The protection status of the item will be displayed in the output section accordingly.
                    <LineBreak/><LineBreak/>
                    Please enter the Enterprise ID that you want to use for protection:
                </TextBlock>
                <StackPanel Orientation="Horizontal"  Grid.Row="1" Margin="0,20,0,0" >
                    <TextBlock x:Name="InputTextBlock2"  TextWrapping="Wrap" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left" >
                    Enterprise ID:
                    </TextBlock>
                    <TextBox x:Name="InputTextBox" Text ="contoso.com" Margin="10,-5,0,0" IsReadOnly="false" HorizontalAlignment="Left" VerticalAlignment="Top" Width="200" Height="10" TextWrapping="Wrap" AcceptsReturn="False"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Grid.Row="2" Margin="0,10,0,0">
                    <Button x:Name="Setup"  Content="Setup" Margin="0,0,10,0" Click="Setup_Click"/>
                    <Button x:Name="ProtectFile"  Content="Protect file" Margin="0,0,10,0" Click="ProtectFile_Click"/>
                    <Button x:Name="ProtectFolder"  Content="Protect folder" Margin="0,0,10,0" Click="ProtectFolder_Click"/>
                </StackPanel>
            </StackPanel>
        </Grid>

        <Grid x:Name="Output" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="1">
            <TextBlock x:Name="OutputTextBlock" Style="{StaticResource BasicTextStyle}" TextWrapping="Wrap"/>
        </Grid>
            
        <!-- Add Storyboards to the visual states below as necessary for supporting the various layouts for the input section -->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="InputFullScreenLandscape"/>
                <VisualState x:Name="InputFilled"/>
                <VisualState x:Name="InputFullScreenPortrait"/>
                <VisualState x:Name="InputSnapped"/>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>


    </Grid>
</common:LayoutAwarePage>

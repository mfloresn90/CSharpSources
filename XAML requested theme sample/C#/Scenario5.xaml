<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->
<Page
    x:Class="SDKTemplate.Scenario5"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:SDKTemplate"
    xmlns:common="using:SDKTemplate.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Grid x:Name="LayoutRoot" Background="White" HorizontalAlignment="Left" VerticalAlignment="Top">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid x:Name="Input" Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <TextBlock x:Name="InputTextBlock1"  TextWrapping="Wrap" Grid.Row="0" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left" >
                By default your application runs in Light theme. You can have your application rendering using a Dark theme. This is done by using the RequestedTheme property. RequestedTheme can be Dark or Light.
            </TextBlock>
            <!--<Button x:Name="showLightTheme" Grid.Row="1" Content="DoSomething" Margin="0,0,10,0" Click="DoSomething_Click"/>-->
        </Grid>

        <Grid x:Name="Output" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="1">
            <Grid.Resources>
                <ResourceDictionary>
                    <ResourceDictionary.ThemeDictionaries>
                        <ResourceDictionary x:Key="Default">
                            <SolidColorBrush x:Key="codeBackground" Color="LightGray"/>
                            <SolidColorBrush x:Key="keywordColor" Color="DarkRed"/>
                            <SolidColorBrush x:Key="attributeColor" Color="Red"/>
                            <SolidColorBrush x:Key="xamlColor" Color="Blue"/>
                        </ResourceDictionary>
                        <ResourceDictionary x:Key="HighContrast">
                            <SolidColorBrush x:Key="codeBackground" Color="{StaticResource SystemColorWindowColor}"/>
                            <SolidColorBrush x:Key="keywordColor" Color="{StaticResource SystemColorWindowTextColor}"/>
                            <SolidColorBrush x:Key="attributeColor" Color="{StaticResource SystemColorWindowTextColor}"/>
                            <SolidColorBrush x:Key="xamlColor" Color="{StaticResource SystemColorWindowTextColor}"/>
                        </ResourceDictionary>
                    </ResourceDictionary.ThemeDictionaries>
                </ResourceDictionary>
            </Grid.Resources>
            <Grid.RowDefinitions>
                <RowDefinition Height="50"/>
                <RowDefinition Height="50"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="50"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Border Background="{StaticResource codeBackground}" Grid.Row="0" Grid.Column="0">
                <RichTextBlock Width="350" TextWrapping="Wrap" FontSize="{StaticResource ControlContentThemeFontSize}" FontFamily="Consolas" VerticalAlignment="Center">
                    <Paragraph Foreground="{StaticResource xamlColor}">&lt;
                        <Span Foreground="{StaticResource keywordColor}">Application</Span>
                        <Span Foreground="{StaticResource attributeColor}" xml:space="preserve"> RequestedTheme</Span>
                        =&quot;Light&quot;&gt;
                    </Paragraph>
                </RichTextBlock>
            </Border>
            <Image Source="light.png" Grid.Row="2" Grid.Column="0"/>

            <Border Background="{StaticResource codeBackground}"  Grid.Row="0" Grid.Column="2">
                <RichTextBlock Width="350" TextWrapping="Wrap" FontSize="{StaticResource ControlContentThemeFontSize}" FontFamily="Consolas" VerticalAlignment="Center">
                    <Paragraph Foreground="{StaticResource xamlColor}">&lt;
                        <Span Foreground="{StaticResource keywordColor}">Application</Span>
                        <Span Foreground="{StaticResource attributeColor}" xml:space="preserve"> RequestedTheme</Span>
                        =&quot;Dark&quot;&gt;
                    </Paragraph>
                </RichTextBlock>
            </Border>
            <Image Source="dark.png" Grid.Row="2" Grid.Column="2"/>

        </Grid>

        <!-- Add Storyboards to the visual states below as necessary for supporting the various layouts -->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="FullScreenLandscape"/>
                <VisualState x:Name="Filled"/>
                <VisualState x:Name="FullScreenPortrait"/>
                <VisualState x:Name="Snapped"/>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</Page>

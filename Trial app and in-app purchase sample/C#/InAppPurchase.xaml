<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->
<common:LayoutAwarePage
    x:Class="Store.InAppPurchase"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Store"
    xmlns:common="using:SDKTemplate.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Grid x:Name="LayoutRoot" Background="White">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid x:Name="Input" Grid.Row="0">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                </Grid.RowDefinitions>
                <TextBlock Grid.Row="0" x:Name="ScenarioTitle" Style="{StaticResource TitleTextStyle}" Text="In-app purchase scenario" Margin="0,10,0,10"/>
                <TextBlock Grid.Row="1"  Style="{StaticResource BasicTextStyle}" TextWrapping="Wrap" Text="This scenario shows two different in-app products; one the customer has bought and the other, they haven't. In this example, the customer has already bought product 1, but not product 2." />
                <StackPanel Grid.Row="2" Orientation="Vertical" Margin="0,10,0,0">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="175"/>
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                        </Grid.RowDefinitions>
                        <Button VerticalAlignment="Top" Grid.Row="0" Grid.Column="0" Width="150" x:Name="TestProduct1" Content="Test product 1" ToolTipService.ToolTip="See if product 1 can be used." Margin="0,0,0,10" Click="TestProduct1_Click"/>
                        <TextBlock Grid.Row="0" Grid.Column="1" x:Name="Product1Desc" Style="{StaticResource BasicTextStyle}" TextWrapping="Wrap" Text="Test product 1 to see if it can be used by the customer. Display the result in the output area." />
                        <Button VerticalAlignment="Top" Grid.Row="1" Grid.Column="0" Width="150" x:Name="BuyProduct1Button" Content="Buy product 1" ToolTipService.ToolTip="Display the in-app purchase dialog box for product 1." Margin="0,0,0,10" Click="BuyProduct1Button_Click"/>
                        <Grid Grid.Row="1" Grid.Column="1">
                            <Grid.RowDefinitions>
                                <RowDefinition  Height="auto" />
                                <RowDefinition  Height="auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Row="0" Grid.Column="0" x:Name="Product1SellDesc" Style="{StaticResource BasicTextStyle}" TextWrapping="Wrap" Text="Demonstrates what happens when a customer tries to buy a product they already own. Query the Store API to get the in-app offer information and show it here." />
                            <TextBlock Grid.Row="1" Grid.Column="0" x:Name="Product1SellMessage" Style="{StaticResource BasicTextStyle}" TextWrapping="Wrap" Text="" />
                        </Grid>
                        <Button VerticalAlignment="Top" Grid.Row="2" Grid.Column="0" Width="150" x:Name="TestProduct2" Content="Test product 2" ToolTipService.ToolTip="See if product 2 can be used." Click="TestProduct2_Click"/>
                        <TextBlock Grid.Row="2" Grid.Column="1" x:Name="Product2Desc" Style="{StaticResource BasicTextStyle}" TextWrapping="Wrap" Text="Test product 2 to see if it can be used by the customer. Display the result in the output area." />
                        <Button VerticalAlignment="Top" Grid.Row="3" Grid.Column="0" Width="150" x:Name="BuyProduct2" Content="Buy product 2" ToolTipService.ToolTip="Display the in-app purchase dialog box for product 2." Click="BuyProduct2_Click"/>
                        <Grid Grid.Row="3" Grid.Column="1">
                            <Grid.RowDefinitions>
                                <RowDefinition  Height="auto"/>
                                <RowDefinition  Height="auto"/>
                                <RowDefinition  Height="auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Row="0" Grid.Column="0" x:Name="Product2SellDesc1" Style="{StaticResource BasicTextStyle}" TextWrapping="Wrap" Text="Display the purchase dialog box to buy product 2. Query the Store API to get the in-app offer information and show it here." />
                            <TextBlock Grid.Row="1" Grid.Column="0" x:Name="Product2SellMessage" Style="{StaticResource BasicTextStyle}" TextWrapping="Wrap" Text="" />
                            <TextBlock Grid.Row="2" Grid.Column="0" x:Name="Product2SellDesc2" Style="{StaticResource BasicTextStyle}" TextWrapping="Wrap" Text="Click Test product 2 after you buy this product." />
                        </Grid>
                    </Grid>
                </StackPanel>
            </Grid>
        </Grid>

        <Grid x:Name="Output" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="1">
        </Grid>

        <!-- Add Storyboards to the visual states below as necessary for supporting the various layouts -->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="DefaultLayout"/>
                <VisualState x:Name="Below768Layout"/>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

    </Grid>
</common:LayoutAwarePage>

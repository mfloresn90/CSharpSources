<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
//
//*********************************************************
-->
<common:LayoutAwarePage
    x:Class="AlarmNotifications.ToastScenario"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:AlarmNotifications"
    xmlns:common="using:SDKTemplate.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Grid x:Name="LayoutRoot" Background="White" HorizontalAlignment="Left" VerticalAlignment="Top">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid x:Name="Input" Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <TextBlock x:Name="InputTextBlock1"  TextWrapping="Wrap" Grid.Row="0" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left" >
                This scenario will simulate an alarm notification with secondary actions - snooze and dismiss
                <LineBreak/>
                <LineBreak/>
                You can set a delay to give you time to switch to the lock screen
                <LineBreak/>
                <LineBreak/>
                The default snooze duration is 9 minutes
            </TextBlock>

            <Grid Grid.Row="1" Margin="0,10,0,10">
                <Grid.RowDefinitions>
                    <RowDefinition Height="34*" />
                    <RowDefinition Height="34*" />
                    <RowDefinition Height="41"/>
                    <RowDefinition />
                    <RowDefinition Height="29*" />
                    <RowDefinition Height="0*" />

                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" MinWidth="358.981" />
                </Grid.ColumnDefinitions>
                <Button Grid.Column="0" Grid.Row="0" x:Name="DefaultSnooze" Content="Default Snooze" Click="SendToast_Click" Height="34" Width="134"/>
                <TextBlock Grid.Row="0" Text="After clicking snooze, alarm will play again after a default time of 9 minutes" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left" Grid.ColumnSpan="2" Margin="134,0,0,0" Width="533" VerticalAlignment="Center" />
                <Button Grid.Column="0" Grid.Row="1" x:Name="CustomSnooze" Content="Custom Snooze" Click="SendToast_Click" Height="34" Width="134"/>
                <TextBlock Grid.Row="1" Text="After clicking snooze, alarm will play again after the custom snooze time" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left" Grid.ColumnSpan="1" Margin="134,8,-32,7" Width="566" VerticalAlignment="Center" />
                <TextBlock Grid.Column="0" Grid.Row="2" Text="Custom Snooze Time (minutes)" Style="{StaticResource BasicTextStyle}" Margin="4,10,204.518,0" VerticalAlignment="Top" HorizontalAlignment="Stretch" Grid.ColumnSpan="1" Height="19"/>
                <TextBox Text="5" Grid.Row="2" x:Name="CustomSnoozeTime" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="229,5,0,0" Height="32" Width="64"/>
            </Grid>

            <Grid Grid.Row="2" Margin="0,10,0,0">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />

                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>


                <TextBlock Grid.Column="0" Grid.Row="0" Text="Toast delay" Style="{StaticResource BasicTextStyle}" Margin="5,0,660.366,0" VerticalAlignment="Top"/>
                <ComboBox Grid.Row="0" x:Name="ToastDelay" SelectedIndex="1" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="88,-6,0,-6">
                    <ComboBoxItem x:Name="d2">2 seconds</ComboBoxItem>
                    <ComboBoxItem x:Name="d5">5 seconds</ComboBoxItem>
                    <ComboBoxItem x:Name="d10">10 seconds</ComboBoxItem>
                    <ComboBoxItem x:Name="d30">30 seconds</ComboBoxItem>
                </ComboBox>



            </Grid>

            <!-- Add Storyboards to the visual states below as necessary for supporting the various layouts for the input section -->
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup>
                    <VisualState x:Name="InputFullScreenLandscape"/>
                    <VisualState x:Name="InputFilled"/>
                    <VisualState x:Name="InputFullScreenPortrait"/>
                    <VisualState x:Name="InputSnapped"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>

        <Grid x:Name="Output" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="1">

            <!-- Add Storyboards to the visual states below as necessary for supporting the various layouts for the output section -->
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup>
                    <VisualState x:Name="OutputFullScreenLandscape"/>
                    <VisualState x:Name="OutputFilled"/>
                    <VisualState x:Name="OutputFullScreenPortrait"/>
                    <VisualState x:Name="OutputSnapped"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </Grid>
</common:LayoutAwarePage>

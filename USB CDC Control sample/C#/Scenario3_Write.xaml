<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
//
//*********************************************************
-->
<local:SingleDevicePage
    x:Class="UsbCdcControl.CdcAcmWrite"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:UsbCdcControl"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Page.Resources>
    </Page.Resources>

    <Grid x:Name="LayoutRoot" Background="White" HorizontalAlignment="Left" VerticalAlignment="Top">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid x:Name="Input" Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <TextBlock x:Name="InputTextBlock1"  TextWrapping="Wrap" Grid.Row="0" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left" >
              This scenario shows how to write data to a CDC ACM device.
            </TextBlock>
            <StackPanel Orientation="Vertical" Margin="0,5,0,0" Grid.Row="1">
                <StackPanel HorizontalAlignment="Left" Orientation="Horizontal" Margin="0,0,0,0">
                    <TextBlock TextWrapping="Wrap" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left" Margin="0,0,10,0">
                        CDC ACM device:
                    </TextBlock>
                    <TextBlock x:Name="textBlockDeviceInUse" TextWrapping="Wrap" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left"/>
                </StackPanel>
                <StackPanel HorizontalAlignment="Left" Orientation="Horizontal" Margin="0,5,0,0">
                    <TextBox x:Name="textBoxDataToWrite" HorizontalAlignment="Left" TextWrapping="Wrap" Text="" VerticalAlignment="Top" Width="442"/>
                    <StackPanel HorizontalAlignment="Left" Orientation="Vertical" Margin="0,0,0,0">
                        <StackPanel HorizontalAlignment="Left" Orientation="Horizontal" Margin="0,0,0,0">
                            <Button x:Name="buttonWriteBulkOut" Content="Write Text" HorizontalAlignment="Left" VerticalAlignment="Center"  Click="buttonWriteBulkOut_Click"  Width="120"/>
                            <CheckBox x:Name="checkBoxSendNullTerminateCharToBulkOut" Content="Send NullTerminateChar" IsChecked="False" FontSize="14" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                        </StackPanel>
                        <StackPanel HorizontalAlignment="Left" Orientation="Horizontal" Margin="0,0,0,0">
                            <Button x:Name="buttonSendBreak" Content="Send Break" Width="120" HorizontalAlignment="Left" VerticalAlignment="Top" Click="buttonSendBreak_Click"/>
                            <TextBox x:Name="textBoxDurationOfBreak" HorizontalAlignment="Left" Margin="3,0,0,0" TextWrapping="Wrap" Text="100" VerticalAlignment="Center"  Width="96"/>
                            <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="ms" VerticalAlignment="Center"  FontSize="16"/>
                        </StackPanel>
                    </StackPanel>
                </StackPanel>
                <StackPanel HorizontalAlignment="Left" Orientation="Vertical" Margin="0,3,0,0">
                    <StackPanel HorizontalAlignment="Left" Orientation="Horizontal" Margin="0,0,0,0">
                        <Button x:Name="buttonWriteBinary1" Content="Write Binary Data 1" Width="160" VerticalAlignment="Top" Click="buttonWriteBinary_Click"/>
                        <Button x:Name="buttonLoadBinaryData1" Content="Load Binary Data 1" Width="160" VerticalAlignment="Top" Click="buttonLoadBinaryData_Click"></Button>
                        <TextBox x:Name="textBoxBinaryData1" Grid.Row="1" Width="500" Height="90"></TextBox>
                    </StackPanel>
                    <StackPanel HorizontalAlignment="Left" Orientation="Horizontal" Margin="0,5,0,0">
                        <Button x:Name="buttonWriteBinary2" Content="Write Binary Data 2" Width="160" VerticalAlignment="Top" Click="buttonWriteBinary_Click"/>
                        <Button x:Name="buttonLoadBinaryData2" Content="Load Binary Data 2" Width="160" VerticalAlignment="Top" Click="buttonLoadBinaryData_Click"></Button>
                        <TextBox x:Name="textBoxBinaryData2" Grid.Row="1" Width="500" Height="90"></TextBox>
                    </StackPanel>
                </StackPanel>
            </StackPanel>

            <!-- Add Storyboards to the visual states below as necessary for supporting the various layouts for the input section -->
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup>
                    <VisualState x:Name="InputFullScreenLandscape"/>
                    <VisualState x:Name="InputFilled"/>
                    <VisualState x:Name="InputFullScreenPortrait"/>
                    <VisualState x:Name="InputSnapped"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>

        <Grid x:Name="Output" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="1">
            <StackPanel Orientation="Horizontal"  Margin="5,0,0,0">
                <TextBlock HorizontalAlignment="Left" Margin="0,0,0,0" FontSize="12" TextWrapping="Wrap" Text="Write Log" VerticalAlignment="Top"  Height="22"/>
                <TextBox x:Name="textBoxWriteLog" HorizontalAlignment="Left" Margin="5,0,0,0" TextWrapping="Wrap" Text="" VerticalAlignment="Top" Height="140" Width="950" TextChanged="textBoxLogger_TextChanged"/>
            </StackPanel>

            <!-- Add Storyboards to the visual states below as necessary for supporting the various layouts for the output section -->
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup>
                    <VisualState x:Name="OutputFullScreenLandscape"/>
                    <VisualState x:Name="OutputFilled"/>
                    <VisualState x:Name="OutputFullScreenPortrait"/>
                    <VisualState x:Name="OutputSnapped"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </Grid>
</local:SingleDevicePage>

<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
//
//*********************************************************
-->
<local:SingleDevicePage
    x:Class="UsbCdcControl.CdcAcmRead"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:UsbCdcControl"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Page.Resources>
    </Page.Resources>

    <Grid x:Name="LayoutRoot" Background="White" HorizontalAlignment="Left" VerticalAlignment="Top">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid x:Name="Input" Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <TextBlock x:Name="InputTextBlock1"  TextWrapping="Wrap" Grid.Row="0" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left" >
              This scenario shows how to read data from a CDC ACM device.
            </TextBlock>
            <StackPanel Orientation="Vertical" Margin="0,5,0,0" Grid.Row="1">
                <StackPanel HorizontalAlignment="Left" Orientation="Horizontal" Margin="0,0,0,0">
                    <TextBlock TextWrapping="Wrap" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left" Margin="0,0,10,0">
                        CDC ACM device:
                    </TextBlock>
                    <TextBlock x:Name="textBlockDeviceInUse" TextWrapping="Wrap" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left"/>
                </StackPanel>
                <StackPanel HorizontalAlignment="Left" Orientation="Horizontal" Margin="0,5,0,0">
                    <StackPanel HorizontalAlignment="Left" Orientation="Vertical" Margin="0,0,5,0">
                        <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="Bytes to read" VerticalAlignment="Top"/>
                        <TextBox x:Name="textBoxBytesToRead" HorizontalAlignment="Left" TextWrapping="Wrap" Text="0" VerticalAlignment="Top" Width="133"/>
                    </StackPanel>
                    <StackPanel HorizontalAlignment="Left" Orientation="Vertical" Margin="0,0,5,0">
                        <TextBlock x:Name="textBlockReadTimeout" HorizontalAlignment="Left" TextWrapping="Wrap" Text="Timeout(ms)" VerticalAlignment="Top"/>
                        <TextBox x:Name="textBoxReadTimeout" HorizontalAlignment="Left" TextWrapping="Wrap" Text="-1" VerticalAlignment="Top" Width="133"/>
                    </StackPanel>
                    <StackPanel HorizontalAlignment="Left" Orientation="Vertical" Margin="0,0,5,0">
                        <TextBlock></TextBlock>
                        <Button x:Name="buttonReadBulkIn" Content="Read" HorizontalAlignment="Left" Margin="0,0,0,0" VerticalAlignment="Top" Width="120" Click="buttonReadBulkIn_Click"/>
                    </StackPanel>
                    <StackPanel HorizontalAlignment="Left" Orientation="Vertical" Margin="60,0,5,0">
                        <TextBlock></TextBlock>
                        <Button x:Name="buttonWatchBulkIn" Content="Continuous Read" HorizontalAlignment="Left" VerticalAlignment="Top" Width="180" Click="buttonWatchBulkIn_Click"/>
                    </StackPanel>
                    <StackPanel HorizontalAlignment="Left" Orientation="Vertical" Margin="0,0,5,0">
                        <TextBlock></TextBlock>
                        <Button x:Name="buttonStopWatching" Content="Stop Continuous Read" HorizontalAlignment="Left" Margin="0,0,0,0" VerticalAlignment="Top" Width="180" IsEnabled="False" Click="buttonStopWatching_Click"/>
                    </StackPanel>
                </StackPanel>
            </StackPanel>

            <!-- Add Storyboards to the visual states below as necessary for supporting the various layouts for the input section -->
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup>
                    <VisualState x:Name="InputFullScreenLandscape"/>
                    <VisualState x:Name="InputFilled"/>
                    <VisualState x:Name="InputFullScreenPortrait"/>
                    <VisualState x:Name="InputSnapped"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>

        <Grid x:Name="Output" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="1">
            <StackPanel Orientation="Horizontal">
                <StackPanel Orientation="Vertical">
                    <StackPanel Orientation="Horizontal">
                        <RadioButton x:Name="radioButtonAscii" Content="ASCII Format" FontSize="12" GroupName="DataFormat" VerticalAlignment="Center" IsChecked="True" Checked="radioButtonDataFormat_Checked"/>
                        <RadioButton x:Name="radioButtonBinary" Content="Binary Format" FontSize="12" GroupName="DataFormat" VerticalAlignment="Center" Checked="radioButtonDataFormat_Checked"/>
                    </StackPanel>
                    <TextBox x:Name="textBoxReadBulkInLogger" HorizontalAlignment="Left" TextWrapping="Wrap" Text="" VerticalAlignment="Top" Height="250" Width="1000" TextChanged="textBoxLogger_TextChanged"/>
                </StackPanel>
            </StackPanel>

            <!-- Add Storyboards to the visual states below as necessary for supporting the various layouts for the output section -->
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup>
                    <VisualState x:Name="OutputFullScreenLandscape"/>
                    <VisualState x:Name="OutputFilled"/>
                    <VisualState x:Name="OutputFullScreenPortrait"/>
                    <VisualState x:Name="OutputSnapped"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </Grid>
</local:SingleDevicePage>

<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
//
//*********************************************************
-->
<common:LayoutAwarePage
    x:Class="Flyouts.Scenario1"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Flyouts"
    xmlns:common="using:SDKTemplate.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Grid x:Name="LayoutRoot" Background="White" HorizontalAlignment="Left" VerticalAlignment="Top">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid x:Name="Input" Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <TextBlock TextWrapping="Wrap" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left" >
                This scenario demonstrates basic usage of the Flyout and MenuFlyout controls through the "Flyout" property of Button.  Flyouts serve as lightweight, secondary UIs that present information or require the user for confirmation for an action.
                MenuFlyouts present the user with a list of options.  Both controls respond to light dismiss (i.e. tapping outside of the control will dismiss it).
                <LineBreak/><LineBreak/>
                Click the Buy and Options buttons to launch a Flyout and a MenuFlyout, respectively.  Setting the Button.Flyout property to an instance of a Flyout (or MenuFlyout) will cause the Flyout to show automatically upon invocation of the Button.
                <LineBreak/><LineBreak/>
                Note that the Flyout only presents an option for action confirmation and does not have a "Close" option.  Users can close the Flyout and cancel the action through light dismiss.
            </TextBlock>
            <StackPanel Orientation="Horizontal" Margin="0,10,0,0" Grid.Row="1">
                <Button x:Name="buttonWithFlyout" Content="Buy" Margin="0,0,10,0">
                    <Button.Flyout>
                        <Flyout Opened="flyout_Opened">
                            <StackPanel>
                                <TextBlock Style="{StaticResource BasicTextStyle}">Do you really want to buy this item?</TextBlock>
                                <Button x:Name="confirmPurchase" Click="confirmPurchase_Click">Confirm Purchase</Button>
                            </StackPanel>
                        </Flyout>
                    </Button.Flyout>
                </Button>
                <Button Content="Options" Margin="0,0,10,0">
                    <Button.Flyout>
                        <MenuFlyout Opened="menuFlyout_Opened">
                            <MenuFlyoutItem Text="Item 1" Click="option_Click"/>
                            <MenuFlyoutItem Text="Item 2" Click="option_Click"/>
                            <MenuFlyoutSeparator/>
                            <ToggleMenuFlyoutItem Text="Enable Feature X" Click="enable_Click"/>
                        </MenuFlyout>
                    </Button.Flyout>
                </Button>
            </StackPanel>
        </Grid>

        <Grid x:Name="Output" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="1">
        </Grid>
    </Grid>
</common:LayoutAwarePage>

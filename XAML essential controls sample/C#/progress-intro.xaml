<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->
<common:LayoutAwarePage
    x:Class="BasicControls.ProgressIntro"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:BasicControls"
    xmlns:common="using:SDKTemplate.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Grid x:Name="LayoutRoot" Background="White">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid x:Name="Input" Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <TextBlock x:Name="InputTextBlock1" Grid.Row="0" TextWrapping="Wrap" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left">
                The ProgressBar control can be used to show that the system is busy with some activity.
                The progress bar can show a determinate or measurable progress from 0 to a maximum value.
                It can also show an indeterminate progress that shows that the page is doing something but the amount of time needed or progress isn't known.
            </TextBlock>
        </Grid>

        <Grid x:Name="Output" Grid.Row="1" Margin="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="300"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            
            <TextBlock Grid.Row="0" Grid.ColumnSpan="2" Text="Basic" Style="{StaticResource HeaderTextStyle}"/>
            
            <StackPanel Grid.Row="1" Grid.Column="0" Margin="10">
                <TextBlock Style="{StaticResource BasicTextStyle}">
                    Indeterminate progress bar
                </TextBlock>
                <TextBlock Style="{StaticResource CaptionTextStyle}">
                    &lt;Progress Bar IsIndeterminate='True' /&gt;
                </TextBlock>
            </StackPanel>
            <ProgressBar Grid.Row="1" Grid.Column="1" Width="130" IsIndeterminate="True" Value="0"
                         ShowPaused="{Binding IsChecked,ElementName=PausedRB}"
                         ShowError="{Binding IsChecked,ElementName=ErrorRB}"
            />
           
            <StackPanel Grid.Row="2" Grid.Column="0" Margin="10">
                <TextBlock Style="{StaticResource BasicTextStyle}">
                    Determinate progress bar
                </TextBlock>
                <TextBlock Style="{StaticResource CaptionTextStyle}">
                    &lt;Progress Bar Value='30' /&gt;
                </TextBlock>
            </StackPanel>
            <ProgressBar Grid.Row="2" Grid.Column="1" Value="{Binding ElementName=ProgressState,Path=Value}" Width="130"
                         ShowPaused="{Binding IsChecked,ElementName=PausedRB}"
                         ShowError="{Binding IsChecked,ElementName=ErrorRB}"
            />
            
            <StackPanel Grid.Row="3" Grid.Column="0" Margin="10">
                <TextBlock Style="{StaticResource BasicTextStyle}">
                    Progress ring
                </TextBlock>
                <TextBlock Style="{StaticResource CaptionTextStyle}">
                    &lt;ProgressRing /&gt;
                </TextBlock>
            </StackPanel>
            <ProgressRing Grid.Row="3" Grid.Column="1"
                          IsActive="{Binding IsChecked,ElementName=RunningRB}"
            />
            
            <StackPanel Grid.Row="4" Grid.Column="0">
                <Slider x:Name="ProgressState" Grid.Row="4" Grid.Column="0" Width="130" Value="30" Height="30"/>   
                <TextBlock Style="{StaticResource CaptionTextStyle}" Text="Drag to adjust progress level..." TextAlignment="Center"/>
            </StackPanel>
            <StackPanel Grid.Row="4" Grid.Column="1" Margin="10">
                <TextBlock Style="{StaticResource BasicTextStyle}">
                    Visual states:
                </TextBlock>
                <StackPanel Orientation="Horizontal">
                    <RadioButton x:Name="RunningRB" GroupName="ProgressState" Content="Running" IsChecked="True"/>
                    <RadioButton x:Name="PausedRB" GroupName="ProgressState" Content="Paused"/>
                    <RadioButton x:Name="ErrorRB" GroupName="ProgressState" Content="Error"/>
                </StackPanel>
            </StackPanel>
            
            <!--<TextBlock Grid.Row="5" Grid.ColumnSpan="2" Text="Styling" Style="{StaticResource HeaderTextStyle}"/>
            
            <StackPanel Grid.Row="6" Grid.Column="0" Margin="10">
                <TextBlock Style="{StaticResource BasicTextStyle}">
                    Customize Color
                </TextBlock>
            </StackPanel>
            <StackPanel Grid.Row="6" Grid.Column="1">
                <ProgressBar Width="130" Foreground="Green" Value="30" IsIndeterminate="False"/>
            </StackPanel>-->
       
        </Grid>

        <!-- Add Storyboards to the visual states below as necessary for supporting the various layouts -->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="DefaultLayout"/>
                <VisualState x:Name="Below768Layout"/>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</common:LayoutAwarePage>

<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->
<common:LayoutAwarePage
    x:Class="BasicControls.MiscControls"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:BasicControls"
    xmlns:common="using:SDKTemplate.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Grid x:Name="LayoutRoot" Background="White">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid x:Name="Input" Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <TextBlock x:Name="InputTextBlock1" Grid.Row="0" TextWrapping="Wrap" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left">
                This scenario demonstrates a series of miscellaneous controls.  You can interact
                with the controls below and set properties provided to see how the controls work.
            </TextBlock>
        </Grid>

        <Grid x:Name="Output" Grid.Row="1" Margin="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="300"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            
            <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="0,20,0,0">
                <TextBlock Text="Image: " Style="{StaticResource BasicTextStyle}"/>
                <Image x:Name="Image1"  Width="200" Height="100" Stretch="UniformToFill" Margin="55,0,0,0"
                    ToolTipService.ToolTip="Oregon Coast" ToolTipService.Placement="Top" Source="Assets/image1.jpg"/>
            </StackPanel>

            <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal" Margin="20,0,0,0">
                <TextBlock Text="Stretch: " Style="{StaticResource BasicTextStyle}" VerticalAlignment="Center"/>
                <RadioButton x:Name="FillButton" Margin="5" GroupName="Stretch Mode"
                    Content="Fill" Checked="StretchModeButton_Checked"/>
                <RadioButton x:Name="NoneButton" Margin="5" GroupName="Stretch Mode"
                    Content="None" Checked="StretchModeButton_Checked"/>
                <RadioButton x:Name="UniformButton" Margin="5" GroupName="Stretch Mode"
                    Content="Uniform" Checked="StretchModeButton_Checked"/>
                <RadioButton x:Name="UniformToFillButton" Margin="5" GroupName="Stretch Mode"
                    Content="UniformToFill" Checked="StretchModeButton_Checked" IsChecked="True"/>
            </StackPanel>
            
            <StackPanel Grid.Row="1"  Orientation="Horizontal" Margin="0,20,0,0" Grid.ColumnSpan="2">
                <TextBlock Text="Tooltip: " Style="{StaticResource BasicTextStyle}"/>
                <TextBlock Text="Tap and hold or mouse over the Image above to see a ToolTip"
                    Style="{StaticResource BasicTextStyle}" Margin="55,0,0,0"/>
            </StackPanel>

        </Grid>

        <!-- Add Storyboards to the visual states below as necessary for supporting the various layouts -->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="DefaultLayout"/>
                <VisualState x:Name="Below768Layout"/>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</common:LayoutAwarePage>

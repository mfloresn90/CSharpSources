<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->
<common:LayoutAwarePage
    x:Class="CryptoWinRT.SignVerify"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:CryptoWinRT"
    xmlns:common="using:SDKTemplate.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Grid x:Name="LayoutRoot" Background="White" HorizontalAlignment="Left" VerticalAlignment="Top">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid x:Name="Input" Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <StackPanel>
                <TextBlock TextWrapping="Wrap" Style="{StaticResource BasicTextStyle}" Text="Sign and Verify Signature - This scenario demonstrates how to use asymmetric keys for data signature and how to verify the signature with the WinRT APIs."/>
                <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
                    <StackPanel Width="213" Height="60">
                        <RadioButton x:Name="bAsymmetric" Content="Asymmetric Algorithms" VerticalAlignment="Stretch" Checked="bAsymmetric_Checked"/>
                        <RadioButton x:Name="bHmac" Content="HMAC Algorithms" VerticalAlignment="Stretch" Checked="bHmac_Checked"/>
                    </StackPanel>
                    <ComboBox x:Name="AlgorithmNames" Width="200" Margin="5,5,5,5" Height="45">
                        <ComboBoxItem Content="ECDSA_P256_SHA256"/>
                        <ComboBoxItem Content="ECDSA_P384_SHA384"/>
                        <ComboBoxItem Content="ECDSA_P521_SHA512"/>
                        <ComboBoxItem Content="RSASIGN_PKCS1_SHA1"/>
                        <ComboBoxItem Content="RSASIGN_PKCS1_SHA256"/>
                        <ComboBoxItem Content="RSASIGN_PKCS1_SHA384"/>
                        <ComboBoxItem Content="RSASIGN_PKCS1_SHA512"/>
                        <ComboBoxItem Content="RSASIGN_PSS_SHA1"/>
                        <ComboBoxItem Content="RSASIGN_PSS_SHA256"/>
                        <ComboBoxItem Content="RSASIGN_PSS_SHA384"/>
                        <ComboBoxItem Content="RSASIGN_PSS_SHA512"/>
                        <ComboBoxItem Content="DSA_SHA1"/>
                    </ComboBox>
                    <ComboBox x:Name="KeySizes" Width="100" Margin="5,5,5,5" Height="45">
                        <ComboBoxItem Content="256"/>
                        <ComboBoxItem Content="384"/>
                        <ComboBoxItem Content="521"/>
                        <ComboBoxItem Content="1024"/>
                        <ComboBoxItem Content="2048"/>
                        <ComboBoxItem Content="3072"/>
                        <ComboBoxItem Content="4096"/>
                    </ComboBox>
                    <Button x:Name="RunSample" Content="Run Sample" Margin="0,0,10,0" Click="RunSample_Click"/>
                </StackPanel>
            </StackPanel>
        </Grid>

        <Grid x:Name="Output" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="1">
            <TextBlock Name="SignVerifyText" TextWrapping="Wrap" Style="{StaticResource BasicTextStyle}"/>
        </Grid>

        <!-- Add Storyboards to the visual states below as necessary for supporting the various layouts -->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="FullScreenLandscape"/>
                <VisualState x:Name="Filled"/>
                <VisualState x:Name="FullScreenPortrait"/>
                <VisualState x:Name="Snapped"/>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</common:LayoutAwarePage>

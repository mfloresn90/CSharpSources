<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Certificate" xml:space="preserve">
    <value>-----BEGIN CERTIFICATE-----
MIIZKgIBAzCCGOYGCSqGSIb3DQEHAaCCGNcEghjTMIIYzzCCBggGCSqGSIb3DQEH
AaCCBfkEggX1MIIF8TCCBe0GCyqGSIb3DQEMCgECoIIE7jCCBOowHAYKKoZIhvcN
AQwBAzAOBAhOkv1qLhtl8AICB9AEggTIkEoF4nky1cXfa7B3xRRO2gvZcDaTd4sM
iYHQKUeFolPLhMYNHRAdl5mI0QQH+P041KVUGqYmWI8yOyUCkaH4OKmELKqUJZ1d
+eWp2SWUibGSPrvJhocX6cp6QqWq3HaB3n3h1ZejWgT4c3whyRJZKBe0gz/6w3oE
lV2AXD4RtHwkoxvJdhufXZTPC7Jgp1udXy+p90Mcu8ZlI+tGAUkXrq0XEp9GL82R
Zyv9i3GW8YdTEDJsnHJeyRuiYz6IKxoiYwrXa5YdEdxodMd/hq8MoIOH+65gQ1ah
p63FyZuoxUn4mg2t3bNabKQPgDsZEoEXgzNGjGOx+RaEP+o4lo/wqCBVJg59ReQk
2Ep6jHeM6VgFH3Q0KFS8RXdk29ft7/3A0sMDpf2rKs0ZSgojakKw6uumwdxsr087
yR0miI/dvdDwNCSUflTioS4ToHqVyBywnecq1AgZaXo3yQAN17ThfCZZ7fV6FHPo
6xCLIQy1rNroYa9t7570OobellLL1fPL1DEC1sQzT/YjizlmKTbpEmVTpg8JS+cy
hmxoYQvBAvAEH6nOKZxT8JBJmJOGlEs81XhuUr8XF76L9YGqIlgwbih6K+vLFczg
XSV8GcMmQ7OHjp8WQBjDGDoVD2GRUiLksAEcfmUwu/wWuePiwApQUi7zulrVPay8
iJ0WTTGmx+MdIwktpJt270VF5Qd8kGYBFKZvt8ikTviocr55v7MyCcfJ5cLCfzXU
bBB14zpUBHHQjk8OgewWSw2mIURLw9k5ZJmwQe+91lXITRuSDuPh3n9xMf8VgLqo
ZHT5LyM7PP81AZjHv2p3lWlbmyJibG9F+w7420Cs76QBXDQKXmD49hEMLLE4BSLz
fOue9d46JHChUuY3uqHK6phaTqEorp1Uv12k3PW3Rblzjc+QC/V08IqwVXKURyOj
nT2Bsd7Mo7kauBwshads+kgPGsNp9Wr0xEiUEI9I67PkWwhr5940lIPRU8BMjLXj
BrHDIO4aeTuXtLSDhFNlK+cBr3CjI+z9zeNsW29BXMMwlHwktIbqf+0cWXaSRbhp
Zk/2o0Lk9AJnQGgrdeL5zZHJssR225Xks1uLxoqMtQ8kNpjifbANogdAUdhjdIkV
O4efdlQESPrj0xSrIgjbpiz2BgUb5t6F//pZZVyYiUWGpfc519dZ/vc69/CUCY7l
WSSZ8M71ouUIw5uVy+dlzxi9MqK6J3SgoOpzRbHV81SU/oF2DlMBnU5e4U1nswOm
wXlzQApvzt8yLeSmxUI4IgZi0gMn9elDO7ljCs+aRs7f4oB9PMLeMdzW6c3Bo+Ul
qDgg25DoQO5GrHcVIwOMDejglx9yTzNQiblLKMhbxr7UH4hf8ry//qSS99MMMl9T
AerOb8xInVSp5C9SLv8O4pjVw5WXzmJcgRT3kKdmzjkXzZtImOZ9x9nkDWVfg1uC
WaXrenus4Kpy4EJ3yUOcyiDMivETILW/qYIl7FIN7GyMqAqaZU8dqoC1q27HKpCX
Iyrw6oTpWxJEFfz0Ef4rIOoM9AkPItRKvzDMHZ+GWVb4xURt4eFELh+gAjhZX65j
Cie/BfI1EtQEkZhNrKhblnScgwWIJSY7A6W65LA2XsYKHpHsAmDf9J/5rLkGf5cY
MYHrMBMGCSqGSIb3DQEJFTEGBAQBAAAAMF0GCSsGAQQBgjcRATFQHk4ATQBpAGMA
cgBvAHMAbwBmAHQAIABTAG8AZgB0AHcAYQByAGUAIABLAGUAeQAgAFMAdABvAHIA
YQBnAGUAIABQAHIAbwB2AGkAZABlAHIwdQYJKoZIhvcNAQkUMWgeZgBsAGUALQBQ
AEsASQBfAFUAcwBlAHIAXwBWADMALQBjADcAOAAwADIAMgBlADMALQAxADUAYwA2
AC0ANAAxAGUAMgAtADgANgA4AGEALQBmADAANwA4ADkANgA4ADYAOQBlADQAMDCC
Er8GCSqGSIb3DQEHBqCCErAwghKsAgEAMIISpQYJKoZIhvcNAQcBMBwGCiqGSIb3
DQEMAQYwDgQImNK0k+ImoyMCAgfQgIISeE+Vw1DxnHogUal3oltKX4WuhuSeEzbe
tUnrZ/xe9u/Fjdc3SzVxSzdm8YB83V1huUh+kUGCUtXlRY09sBrEcqlSAg/5Zw6d
erQKHmVWujYUgpm1BWiWyqjkfPkCSLgCNsJm6zE1f2PguJGLwDtg781X3Angqb+z
e15Ywxe3AZ46/FbKfDOyCdJ7XiRCvrpcXMBt22luBlpbTw/fDcbKitBTz2bS9tyn
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
/rWAN0bRSOnJIgICB9A=
-----END CERTIFICATE-----</value>
  </data>
</root>
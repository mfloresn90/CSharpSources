<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->
<common:LayoutAwarePage
    x:Class="Transforms.Scenario4"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Transforms"
    xmlns:common="using:SDKTemplate.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Grid x:Name="LayoutRoot" Background="White">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid x:Name="Input" Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <TextBlock Style="{StaticResource BasicTextStyle}" Grid.Row="0" TextWrapping="Wrap">
                A Matrix3D projection allows you to apply a custom non-affine 3-D transform
                to an element in order to achieve a 3-D effect. The matrix must go from the element's
                space to screen space coordinates. In code, multiple matrices can be multiplied together
                to create more complex effects. In the example below, the image has been rotated and offset
                along multiple axes using a projection matrix. For illustrative purposes, the faded image
                shows the original position before the projection was applied.
            </TextBlock>
        </Grid>

        <Grid x:Name="Output" VerticalAlignment="Top" Grid.Row="1">
            <!-- Display a copy of the original image before transforms are applied. -->
            <Image Source="Assets/image1.jpg" Width="300" Opacity="0.2" />

            <Image Source="Assets/image1.jpg" Width="300">
                <Image.Projection>
                    <!-- Apply a Matrix3DProjection to the image -->
                    <Matrix3DProjection ProjectionMatrix="1,    -0.1, 0,    0,
                                                          -0.5, 1,    0,    0,
                                                          0,    0,    0.5,  0,
                                                          100,  100,  0,    1" />
                </Image.Projection>
            </Image>
        </Grid>

        

    </Grid>
</common:LayoutAwarePage>

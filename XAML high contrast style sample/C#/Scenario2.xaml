<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->
<common:LayoutAwarePage
    x:Class="HighContrast.Scenario2"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:HighContrast"
    xmlns:common="using:SDKTemplate.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Grid x:Name="LayoutRoot" Background="White">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid x:Name="Input" Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <TextBlock x:Name="InputTextBlock1" Grid.Row="0" TextWrapping="Wrap" 
                       Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left">
                The demonstration below shows you how to use the ResourceDictionary.ThemesDictionary 
                API and defined system color key words to implement a custom Button style that that has
                high contrast compliant complex visuals.
            </TextBlock>
        </Grid>

        <Grid x:Name="Output" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="1">
            <Grid>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="350"/>
                    <ColumnDefinition Width="350"/>
                    <ColumnDefinition Width="350"/>
                </Grid.ColumnDefinitions>

                <StackPanel Grid.Column="0">
                    <TextBlock Text="Custom button that is not high contrast aware, with XAML background image" TextWrapping="Wrap" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Center"/>
                    <Button Background="Red" BorderBrush="Black" HorizontalAlignment="Center">
                        <Grid>
                            <Ellipse Width="200" Height="200" Stroke="Black" Fill="Blue" StrokeThickness="2"/>
                            <Ellipse Width="150" Height="150" Stroke="Black" Fill="Green" StrokeThickness="2"/>
                            <Ellipse Width="100" Height="100" Stroke="Black" Fill="Yellow" StrokeThickness="2"/>
                            <Ellipse Width="50" Height="50" Stroke="Black" Fill="White" StrokeThickness="2"/>
                        </Grid>
                    </Button>
                </StackPanel>

                <StackPanel Margin="20,0,0,0" Grid.Column="1">
                    <TextBlock Text="Button that is high contrast aware, but XAML content is not high contrast" TextWrapping="Wrap" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Center"/>
                    <!-- Background and BorderBrush use named system color brushes. -->
                    <Button Background="{StaticResource SystemColorButtonFaceBrush}" BorderBrush="{StaticResource SystemColorButtonTextBrush}"  HorizontalAlignment="Center">
                        <Grid>
                            <Ellipse Width="200" Height="200" Stroke="Black" Fill="Blue" StrokeThickness="2"/>
                            <Ellipse Width="150" Height="150" Stroke="Black" Fill="Green" StrokeThickness="2"/>
                            <Ellipse Width="100" Height="100" Stroke="Black" Fill="Yellow" StrokeThickness="2"/>
                            <Ellipse Width="50" Height="50" Stroke="Black" Fill="White" StrokeThickness="2"/>
                        </Grid>
                    </Button>
                </StackPanel>

                <StackPanel Margin="20,0,0,0" Grid.Column="2">
                    <StackPanel.Resources>
                        <ResourceDictionary>
                            <ResourceDictionary.ThemeDictionaries>
                                <ResourceDictionary x:Key="Default">
                                    <SolidColorBrush x:Key="TargetBackground" Color="Red"/>
                                    <SolidColorBrush x:Key="TargetBorderBrush" Color="Black"/>
                                    <SolidColorBrush x:Key="Circle4Fill" Color="Blue"/>
                                    <SolidColorBrush x:Key="Circle3Fill" Color="Green"/>
                                    <SolidColorBrush x:Key="Circle2Fill" Color="Yellow"/>
                                    <SolidColorBrush x:Key="Circle1Fill" Color="White"/>
                                    <SolidColorBrush x:Key="CircleStroke" Color="Black"/>
                                </ResourceDictionary>
                                <ResourceDictionary x:Key="HighContrastBlack">
                                    <SolidColorBrush x:Key="TargetBackground" Color="Black"/>
                                    <SolidColorBrush x:Key="TargetBorderBrush" Color="White"/>
                                    <SolidColorBrush x:Key="Circle4Fill" Color="Black"/>
                                    <SolidColorBrush x:Key="Circle3Fill" Color="Black"/>
                                    <SolidColorBrush x:Key="Circle2Fill" Color="Black"/>
                                    <SolidColorBrush x:Key="Circle1Fill" Color="Black"/>
                                    <SolidColorBrush x:Key="CircleStroke" Color="White"/>
                                </ResourceDictionary>
                                <ResourceDictionary x:Key="HighContrastWhite">
                                    <SolidColorBrush x:Key="TargetBackground" Color="White"/>
                                    <SolidColorBrush x:Key="TargetBorderBrush" Color="Black"/>
                                    <SolidColorBrush x:Key="Circle4Fill" Color="White"/>
                                    <SolidColorBrush x:Key="Circle3Fill" Color="White"/>
                                    <SolidColorBrush x:Key="Circle2Fill" Color="White"/>
                                    <SolidColorBrush x:Key="Circle1Fill" Color="White"/>
                                    <SolidColorBrush x:Key="CircleStroke" Color="Black"/>

                                </ResourceDictionary>
                                <ResourceDictionary x:Key="HighContrastCustom">
                                    <SolidColorBrush x:Key="TargetBackground" Color="{StaticResource SystemColorButtonFaceColor}"/>
                                    <SolidColorBrush x:Key="TargetBorderBrush" Color="{StaticResource SystemColorButtonTextColor}"/>
                                    <SolidColorBrush x:Key="Circle4Fill" Color="{StaticResource SystemColorHotlightColor}"/>
                                    <SolidColorBrush x:Key="Circle3Fill" Color="{StaticResource SystemColorHotlightColor}"/>
                                    <SolidColorBrush x:Key="Circle2Fill" Color="{StaticResource SystemColorHotlightColor}"/>
                                    <SolidColorBrush x:Key="Circle1Fill" Color="{StaticResource SystemColorHotlightColor}"/>
                                    <SolidColorBrush x:Key="CircleStroke" Color="{StaticResource SystemColorHighlightTextColor}"/>

                                </ResourceDictionary>
                            </ResourceDictionary.ThemeDictionaries>
                        </ResourceDictionary>
                    </StackPanel.Resources>
                    <TextBlock Text="Button that is high contrast aware, and with XAML content that is high contrast" TextWrapping="Wrap" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Center"/>
                    <Button Background="{StaticResource TargetBackground}" BorderBrush="{StaticResource TargetBorderBrush}"  HorizontalAlignment="Center">
                        <Grid>
                            <Ellipse Width="200" Height="200" Stroke="{StaticResource CircleStroke}" Fill="{StaticResource Circle4Fill}" StrokeThickness="2"/>
                            <Ellipse Width="150" Height="150" Stroke="{StaticResource CircleStroke}" Fill="{StaticResource Circle3Fill}" StrokeThickness="2"/>
                            <Ellipse Width="100" Height="100" Stroke="{StaticResource CircleStroke}" Fill="{StaticResource Circle2Fill}" StrokeThickness="2"/>
                            <Ellipse Width="50" Height="50" Stroke="{StaticResource CircleStroke}" Fill="{StaticResource Circle1Fill}" StrokeThickness="2"/>
                        </Grid>
                    </Button>
                </StackPanel>
            </Grid>
        </Grid>

        <!-- Add Storyboards to the visual states below as necessary for supporting the various layouts -->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="DefaultLayout"/>
                <VisualState x:Name="Below768Layout"/>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

    </Grid>
</common:LayoutAwarePage>

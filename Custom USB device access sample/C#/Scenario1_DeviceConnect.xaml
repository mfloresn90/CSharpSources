<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
//
//*********************************************************
-->
<common:LayoutAwarePage
    x:Class="CustomUsbDeviceAccess.DeviceConnect"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:CustomUsbDeviceAccess"
    xmlns:common="using:SDKTemplate.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Page.Resources>
      <CollectionViewSource x:Name="DeviceListSource"/>
    </Page.Resources>
  
    <Grid x:Name="LayoutRoot" Background="White" HorizontalAlignment="Left" VerticalAlignment="Top">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid x:Name="Input" Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <TextBlock x:Name="InputTextBlock1"  TextWrapping="Wrap" Grid.Row="0" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left" >
              This scenario shows how to locate a WinUSB device and open an handle to the device.
              <LineBreak/>
                Note: Sample will automatically attempt to reconnect to your device if the connected device was ever unplugged and replugged into the same USB port.
                If the device is plugged into a different port, it will be seen as a different device.
            </TextBlock>
            <StackPanel Orientation="Vertical" Margin="0,10,0,0" Grid.Row="1">
              <StackPanel Orientation="Horizontal" Margin="0,10,0,0" Grid.Row="1">
                <Button x:Name="ButtonConnectToDevice" Content="Connect to device" Margin="0,0,10,0" Click="ConnectToDevice_Click"/>
                <Button x:Name="ButtonDisconnectFromDevice"  Content="Disconnect from device" Margin="0,0,10,0" Click="DisconnectFromDevice_Click"/>
              </StackPanel>
              <TextBlock Text="Select a Usb Device:" Style="{StaticResource H2Style}"/>
              <ListBox x:Name="ConnectDevices" ItemsSource="{Binding Source={StaticResource DeviceListSource}}"  Height="250">
                <ListBox.ItemTemplate>
                  <DataTemplate>
                    <TextBlock Text="{Binding InstanceId}"/>
                  </DataTemplate>
                </ListBox.ItemTemplate>
              </ListBox>
            </StackPanel>

            <!-- Add Storyboards to the visual states below as necessary for supporting the various layouts for the input section -->
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup>
                    <VisualState x:Name="InputFullScreenLandscape"/>
                    <VisualState x:Name="InputFilled"/>
                    <VisualState x:Name="InputFullScreenPortrait"/>
                    <VisualState x:Name="InputSnapped"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>

        <Grid x:Name="Output" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="1">
            <!-- Add Storyboards to the visual states below as necessary for supporting the various layouts for the output section -->
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup>
                    <VisualState x:Name="OutputFullScreenLandscape"/>
                    <VisualState x:Name="OutputFilled"/>
                    <VisualState x:Name="OutputFullScreenPortrait"/>
                    <VisualState x:Name="OutputSnapped"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
     </Grid>
</common:LayoutAwarePage>

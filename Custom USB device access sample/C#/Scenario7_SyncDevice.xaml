<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
//
//*********************************************************
-->
<common:LayoutAwarePage
    x:Class="CustomUsbDeviceAccess.SyncDevice"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:CustomUsbDeviceAccess"
    xmlns:common="using:SDKTemplate.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Grid x:Name="LayoutRoot" Background="White" HorizontalAlignment="Left" VerticalAlignment="Top">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid x:Name="Input" Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <StackPanel x:Name="DeviceScenarioContainer" Orientation="Vertical" Margin="0,10,0,0" Grid.Row="0">
              <StackPanel x:Name="GeneralScenario" Orientation="Vertical">
                <TextBlock x:Name="GeneralScenarioText"  TextWrapping="Wrap" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left" >
                  This scenario shows how to sync with the device (the sample only demonstrates writing, for more information on reading a writing 
                  to the device, please go to the "Bulk Pipes" scenario). The device must be closed by the app so that the background task can later open the device 
                  and sync with it. Other scenarios (except for scenario 1) will not work until the sync is complete and the device is reopened.
                </TextBlock>
                <Button x:Name="ButtonSync" Content="Sync with the device" Margin="0,0,10,0" Click="Sync_Click"/>
                <Button x:Name="ButtonCancelSync" Content="Cancel Sync with the device" Margin="0,0,10,0" Click="CancelSync_Click"/>
                <StackPanel Orientation="Vertical">
                    <TextBlock x:Name="ProgressBarText"  TextWrapping="Wrap" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left" >
                        Sync progress:
                    </TextBlock>
                    <ProgressBar x:Name="SyncProgressBar" Width="500" Height="10" Margin="10,0" HorizontalAlignment="Left" VerticalAlignment="Top" Maximum="100"/>
                </StackPanel>
              </StackPanel>
            </StackPanel>

            <!-- Add Storyboards to the visual states below as necessary for supporting the various layouts for the input section -->
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup>
                    <VisualState x:Name="InputFullScreenLandscape"/>
                    <VisualState x:Name="InputFilled"/>
                    <VisualState x:Name="InputFullScreenPortrait"/>
                    <VisualState x:Name="InputSnapped"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>

        <Grid x:Name="Output" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="1">
            <!-- Add Storyboards to the visual states below as necessary for supporting the various layouts for the output section -->
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup>
                    <VisualState x:Name="OutputFullScreenLandscape"/>
                    <VisualState x:Name="OutputFilled"/>
                    <VisualState x:Name="OutputFullScreenPortrait"/>
                    <VisualState x:Name="OutputSnapped"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
     </Grid>
</common:LayoutAwarePage>

<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
//
//*********************************************************
-->
<common:LayoutAwarePage
    x:Class="CustomHidDeviceAccess.FeatureReports"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:CustomHidDeviceAccess"
    xmlns:common="using:SDKTemplate.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Grid x:Name="LayoutRoot" Background="White">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid x:Name="Input" Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
          <StackPanel x:Name="DeviceScenarioContainer" Orientation="Vertical" Margin="0,10,0,0" Grid.Row="0">
            <StackPanel x:Name="SuperMuttScenario" Orientation="Vertical">
              <TextBlock x:Name="SuperMuttScenarioText" Grid.Row="0" TextWrapping="Wrap" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left">
                This scenario demonstrates how to use feature report to set/get the LED blink pattern of the SuperMUTT device
              </TextBlock>
              <StackPanel Orientation="Horizontal">
                <StackPanel Orientation="Vertical">
                  <Button x:Name="ButtonGetLedBlinkPattern" Content="Get Led Blink Pattern" Margin="0,0,10,0" Click="GetLedBlinkPattern_Click"/>
                  <Button x:Name="ButtonSetLedBlinkPattern" Content="Set Led Blink Pattern" Margin="0,0,10,0" Click="SetLedBlinkPattern_Click"/>
                </StackPanel>
                <ComboBox x:Name="LedBlinkPatternInput" SelectedIndex="0">
                  <ComboBoxItem Content="0"></ComboBoxItem>
                  <ComboBoxItem Content="1"></ComboBoxItem>
                  <ComboBoxItem Content="2"></ComboBoxItem>
                  <ComboBoxItem Content="3"></ComboBoxItem>
                  <ComboBoxItem Content="4"></ComboBoxItem>
                  <ComboBoxItem Content="5"></ComboBoxItem>
                  <ComboBoxItem Content="6"></ComboBoxItem>
                  <ComboBoxItem Content="7"></ComboBoxItem>
                </ComboBox>
              </StackPanel>
            </StackPanel>
          </StackPanel>
            <!-- Add Storyboards to the visual states below as necessary for supporting the various layouts for the input section -->
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup>
                    <VisualState x:Name="InputFullScreenLandscape"/>
                    <VisualState x:Name="InputFilled"/>
                    <VisualState x:Name="InputFullScreenPortrait"/>
                    <VisualState x:Name="InputSnapped"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>

        <Grid x:Name="Output" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="1">
            <!-- Add Storyboards to the visual states below as necessary for supporting the various layouts for the output section -->
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup>
                    <VisualState x:Name="OutputFullScreenLandscape"/>
                    <VisualState x:Name="OutputFilled"/>
                    <VisualState x:Name="OutputFullScreenPortrait"/>
                    <VisualState x:Name="OutputSnapped"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </Grid>
</common:LayoutAwarePage>
